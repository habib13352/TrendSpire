name: Codex Automation

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Select run mode'
        required: true
        default: daily
        type: choice
        options:
          - daily
          - weekly
          - autobot
  schedule:
    - cron: '0 2 * * *'
    - cron: '0 3 * * 0'
    - cron: '0 5 * * *'
  push:
    branches:
      - main
    paths:
      - 'ai_loop/**'
  pull_request:
    branches:
      - main
    paths:
      - 'ai_loop/**'

jobs:
  codex_review:
    if: github.event_name != 'schedule' || github.event.schedule != '0 5 * * *'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt gh
      - name: Pull latest changes from main before running
        run: |
          git checkout main
          git pull origin main --rebase
      - name: Restore Codex memory
        uses: actions/cache@v3
        with:
          path: trendspire_memory
          key: ${{ runner.os }}-memory-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-memory-
      - name: Run Codex Bot (daily)
        if: |
          (github.event_name == 'schedule' && github.event.schedule == '0 2 * * *') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'daily')
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python ai_loop/trendspire_autoloop.py --mode daily || exit 1
      - name: Run Codex Bot (weekly)
        if: |
          (github.event_name == 'schedule' && github.event.schedule == '0 3 * * 0') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'weekly')
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python ai_loop/trendspire_autoloop.py --mode weekly || exit 1
      - name: Upload Codex Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codex-logs
          path: ai_loop/codex_logs/
      - name: Upload Codex Memory
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codex-memory
          path: ai_loop/trendspire_memory/
      - name: Commit and push API logs
        if: always()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add logs/api_usage.* || true
          git commit -m "chore: update API usage logs [skip ci]" || echo 'No changes to commit'
          git pull --rebase origin main --autostash
          git push origin main

  autobot:
    if: |
      (github.event_name == 'schedule' && github.event.schedule == '0 5 * * *') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'autobot')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt gh
      - name: Run Codex Autobot
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python ai_loop/codex_autobot.py || exit 1

  smoke_test:
    runs-on: ubuntu-latest
    needs: [codex_review, autobot]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run smoke tests
        id: smoke
        run: |
          python ai_loop/trendspire_autoloop.py --help
          auto_exit=$?
          python ai_loop/codex_autobot.py --help
          autobot_exit=$?
          if [ "$auto_exit" -ne 0 ] || [ "$autobot_exit" -ne 0 ]; then
            exit 1
          fi
          echo "auto_exit=$auto_exit" >> "$GITHUB_OUTPUT"
          echo "autobot_exit=$autobot_exit" >> "$GITHUB_OUTPUT"
      - name: Log CI run metrics
        if: success()
        run: |
          mkdir -p ai_loop/metrics
          if [ ! -f ai_loop/metrics/ci_runs.csv ]; then
            echo "timestamp,agent,exit_code" > ai_loop/metrics/ci_runs.csv
          fi
          ts=$(date --iso-8601=seconds)
          echo "$ts,trendspire_autoloop,${{ steps.smoke.outputs.auto_exit }}" >> ai_loop/metrics/ci_runs.csv
          echo "$ts,codex_autobot,${{ steps.smoke.outputs.autobot_exit }}" >> ai_loop/metrics/ci_runs.csv
