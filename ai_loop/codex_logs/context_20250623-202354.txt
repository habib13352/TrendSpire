{'readme': "<!-- TRENDING_START -->\n# üìà GitHub Trending - Daily\n\n_Last updated: 2025-06-23 17:46 UTC_\n\n| Repository | ‚≠ê Stars | Language | Description |\n|------------|--------:|----------|-------------|\n\n| [microsoft/edit](https://github.com/microsoft/edit) | 9298 | Rust | We all edit. |\n\n| [voideditor/void](https://github.com/voideditor/void) | 24521 | TypeScript | No description provided. |\n\n| [ghostty-org/ghostty](https://github.com/ghostty-org/ghostty) | 31953 | Zig | üëª Ghostty is a fast, feature-rich, and cross-platform terminal emulator that uses platform-native UI and GPU acceleration. |\n\n| [kortix-ai/suna](https://github.com/kortix-ai/suna) | 15603 | TypeScript | Suna - Open Source Generalist AI Agent |\n\n| [x1xhlol/system-prompts-and-models-of-ai-tools](https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools) | 60013 | Unknown | FULL v0, Cursor, Manus, Same.dev, Lovable, Devin, Replit Agent, Windsurf Agent, VSCode Agent, Dia Browser & Trae AI (And other Open Sourced) System Prompts, Tools & AI Models. |\n\n| [typst/typst](https://github.com/typst/typst) | 42770 | Rust | A new markup-based typesetting system that is powerful and easy to learn. |\n\n| [HarbourMasters/SpaghettiKart](https://github.com/HarbourMasters/SpaghettiKart) | 809 | C | No description provided. |\n\n| [microsoft/Web-Dev-For-Beginners](https://github.com/microsoft/Web-Dev-For-Beginners) | 89218 | JavaScript | 24 Lessons, 12 Weeks, Get Started as a Web Developer |\n\n| [comfyanonymous/ComfyUI](https://github.com/comfyanonymous/ComfyUI) | 80437 | Python | The most powerful and modular diffusion model GUI, api and backend with a graph/nodes interface. |\n\n| [localsend/localsend](https://github.com/localsend/localsend) | 63019 | Dart | An open-source cross-platform alternative to AirDrop |\n<!-- TRENDING_END -->\n\n# TrendSpire\n\nTrendSpire gathers trending repositories from GitHub and stores them in `TRENDING.md`. GitHub Actions keep the digest fresh and leverage OpenAI Codex to continuously improve the codebase.\n\n## Features\n\n- Automated scraping of GitHub's trending page with configurable language, time range and result limit.\n- Daily workflow to regenerate `TRENDING.md` and update this README.\n- Scheduled Codex runs that suggest small refactors and new tests via pull requests.\n- Token and cost tracking for all Codex requests.\n- Persistent memory stored under `trendspire_memory/` enables the AI to\n  iteratively refine its suggestions across runs and open automated pull\n  requests with context.\n\n## What TrendSpire Does Today\n\n- `python -m src.fetch_trending` ‚Äî scrape GitHub Trending\n- `python -m src.render_digest` ‚Äî render TRENDING.md & inject into README.md\n\n### AI Agents (coming soon)\nSee [AGENTS.md](./AGENTS.md) and [ai_loop/README.md](./ai_loop/README.md) for details on the self-improvement loop.\n\n## Getting Started\n\n1. **Install dependencies**\n   ```bash\n   python3 -m venv venv\n   source venv/bin/activate\n   pip install -r requirements.txt\n   ```\n\n2. **Run the setup wizard**\n   ```bash\n   python scripts/setup_wizard.py\n   ```\n   This interactive script stores your preferred trending options and OpenAI API key.\n   You can rerun it at any time to change the configuration.\n\n3. **Run the trending scraper**\n   ```bash\n   python -m src.render_digest\n   ```\n   The latest results will appear in `TRENDING.md` and the README.\n\n\n## GitHub Actions\n\n### Update Digest\n\nThe workflow [`update_digest.yml`](.github/workflows/update_digest.yml) runs every day at 08:00\xa0UTC. It installs the dependencies, executes `python -m src.render_digest`, and commits any changes to `TRENDING.md` and `README.md`.\n\n### Codex Automation\n\nAnother workflow [`ai_loop.yml`](.github/workflows/ai_loop.yml) drives the Codex automation using [`ai_loop/autoloop.py`](ai_loop/autoloop.py). It supports two modes:\n\n- **Daily** ‚Äì diff-based improvements using `gpt-3.5-turbo`.\n- **Weekly** ‚Äì a full repository review with `gpt-4o`.\n\nEach run applies the returned diff, executes the test suite and, when successful, creates a branch and pull request. Summaries, cost logs and the raw diff are saved under `codex_logs/` and uploaded as workflow artifacts. The workflow also caches the `trendspire_memory/` directory so the AI can refine its suggestions over time.\n\nTo run the Codex automation locally you can execute:\n\n```bash\npython -m ai_loop.autoloop\n```\n\n### API usage reports\n\nThe file `logs/api_usage.*` records token counts and cost. Set `API_LOG_FORMAT`\nto `csv`, `json` or `txt` to control the format. Run `python\nscripts/summarize_usage.py` for a quick summary grouped by model.\n\n### Running tests\n\nAfter installing the requirements you can run the entire test suite with\n\n```bash\npytest\n```\n\nAdditional tips for contributors are available in\n[docs/DEVELOPER.md](docs/DEVELOPER.md).\n", 'src_summary': '__pycache__, config.json, fetch_trending.py, render_digest.py, templates', 'trending_md': '# üìà GitHub Trending - Daily\n\n_Last updated: 2025-06-23 17:46 UTC_\n\n| Repository | ‚≠ê Stars | Language | Description |\n|------------|--------:|----------|-------------|\n\n| [microsoft/edit](https://github.com/microsoft/edit) | 9298 | Rust | We all edit. |\n\n| [voideditor/void](https://github.com/voideditor/void) | 24521 | TypeScript | No description provided. |\n\n| [ghostty-org/ghostty](https://github.com/ghostty-org/ghostty) | 31953 | Zig | üëª Ghostty is a fast, feature-rich, and cross-platform terminal emulator that uses platform-native UI and GPU acceleration. |\n\n| [kortix-ai/suna](https://github.com/kortix-ai/suna) | 15603 | TypeScript | Suna - Open Source Generalist AI Agent |\n\n| [x1xhlol/system-prompts-and-models-of-ai-tools](https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools) | 60013 | Unknown | FULL v0, Cursor, Manus, Same.dev, Lovable, Devin, Replit Agent, Windsurf Agent, VSCode Agent, Dia Browser & Trae AI (And other Open Sourced) System Prompts, Tools & AI Models. |\n\n| [typst/typst](https://github.com/typst/typst) | 42770 | Rust | A new markup-based typesetting system that is powerful and easy to learn. |\n\n| [HarbourMasters/SpaghettiKart](https://github.com/HarbourMasters/SpaghettiKart) | 809 | C | No description provided. |', 'trend_json_summary': '2025-06-23 17:46 UTC; microsoft/edit (9298); voideditor/void (24521); ghostty-org/ghostty (31953); kortix-ai/suna (15603); x1xhlol/system-prompts-and-models-of-ai-tools (60013)', 'goals': '# üß† TrendSpire ‚Äì Project Goals & Roadmap\n\nTrendSpire is a self-improving, trend-aware GitHub repository that automatically:\n- Tracks trending GitHub repos and saves snapshots\n- Analyzes repo structure, docs, and tech patterns\n- Suggests improvements via AI\n- Opens pull requests with patches\n- Evolves based on open-source trends\n\n---\n\n## üéØ Core Vision\n\nBuild a fully automated developer assistant that:\n- **Monitors the repo and tech ecosystem**\n- **Suggests and applies useful changes**\n- **Opens PRs for human review**\n- **Learns from trend data over time**\n\n---\n\n## üß± PHASED ROADMAP\n\n### ‚úÖ Phase 1 ‚Äì Trending Digest + Archival (Complete)\n- Automate fetching trending GitHub repositories daily\n- Save snapshots as both `.md` and `.json` files\n- Store all historical snapshots in `trends/archive/`\n- Update root `TRENDING.md` and `README.md` with latest trend\n\n---\n\n### üîß Phase 1.5 ‚Äì Codebase Cleanup (Now)\n**Goal:** Refactor `ai_loop/` to be lean and modular for AI integration\n\nTasks:\n - ‚úÖ Delete or archive unused scripts (`trendspire_autoloop.py`, etc.)\n - ‚úÖ Simplify `improver.py` to keep only working patch/prompt logic\n - ‚úÖ Create scaffolding modules:\n  - `context_builder.py`\n  - `suggestor.py`\n  - `patcher.py`\n  - `logger.py`\n - ‚úÖ Setup `autoloop.py` as single entrypoint: `python -m ai_loop.autoloop`\n - ‚úÖ Confirm trending/archival system still runs cleanly\n\n---\n\n### ‚úÖ Phase 2 ‚Äì AI Suggestion Loop (Complete)\n**Goal:** AI reads your repo + recent trends and suggests useful patches**\n\nModules:\n- `context_builder.py` ‚Üí Loads README, key files, trend snapshot\n- `suggestor.py` ‚Üí Crafts OpenAI prompt and parses response\n- `patcher.py` ‚Üí Applies or saves patch\n- `logger.py` ‚Üí Tracks tokens, cost, and output for traceability\n\nFeatures:\n- Runs manually or on schedule\n- Logs each AI action and cost\n- Stores patches in versioned branches\n\n### ‚úÖ Phase 2.1 ‚Äì Agent Pipeline Scaffolding (Complete)\n- Added Planner, Coder, and PR Agent modules\n- Wired pipeline via `agent_loop.py`\n\n### ‚úÖ Phase 2.2 ‚Äì Memory & Logging (Complete)\n- Context builder reads README, goals and latest trends\n- Pipeline passes a short memory excerpt between agents\n- Logs and memory artifacts uploaded via CI\n\n\n---\n\n### üß† Phase 3 ‚Äì Agentic Workflow\n**Goal:** Enable multi-step reasoning and iteration\n\nUpgrades:\n- Allow multi-turn conversations per suggestion\n- Implement roles: Planner ‚Üí Coder ‚Üí Reviewer\n- Integrate feedback loops if patch breaks tests\n\n### ‚úÖ Phase 3.1 ‚Äì Reviewer Agent (Complete)\n- Added a lightweight Reviewer that checks the diff\n- Each agent step logs output in `ai_loop/codex_logs/`\n\n---\n\n### üìä Phase 4 ‚Äì Trend-Aware Reasoning\n**Goal:** Let AI learn from past trend archives to guide decisions\n\nTasks:\n- Parse and embed `.json` snapshots\n- Detect pattern changes across time\n- AI says: _‚ÄúX is trending ‚Äî adapt your repo to match‚Äù_\n\n---\n\n### üîÅ Phase 5 ‚Äì Real-Time Monitoring & Auto PRs\n**Goal:** Let the AI work completely hands-free\n\nFeatures:\n- Auto-push patches to new branch\n- Auto-create PRs with metadata and patch\n- Auto-label by type: `type:docs`, `enhancement`, etc.\n- Webhook/CI-based feedback (e.g., only merge if tests pass)\n\n---\n\n## üßë\u200düíª Endgame\n\nYou become a **maintainer**, not an executor.  \nTrendSpire:\n- Suggests useful changes\n- Opens pull requests\n- You approve, tweak, or reject\n\nIt‚Äôs your open-source **co-pilot**, powered by Codex, and evolving with GitHub itself.\n\n---\n', 'memory': ''}